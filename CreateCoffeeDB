-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Coffee"
(
    "CoffeeID" integer,
    "CoffeeProcess" character varying,
    "CoffeeCupScore" real,
    "FarmID" integer,
    "OrderID" integer,
    PRIMARY KEY ("CoffeeID")
);

CREATE TABLE IF NOT EXISTS public."Supplier"
(
    "SupplierID" integer,
    "SupplierName" character varying,
    "SupplierCity" character varying,
    "SupplierState" character,
    PRIMARY KEY ("SupplierID")
);

CREATE TABLE IF NOT EXISTS public."Farm"
(
    "FarmID" integer,
    "FarmName" character varying,
    "FarmCity" character varying,
    "FarmCountry" character varying,
    "FarmProvince" character varying,
    "FarmElevation" character varying,
    PRIMARY KEY ("FarmID")
);

CREATE TABLE IF NOT EXISTS public."Roast"
(
    "RoastID" integer,
    "RoastDate" timestamp with time zone,
    "CoffeeID" integer,
    "RoasterID" integer,
    "RoastStats" json,
    "OperatorID" integer,
    PRIMARY KEY ("RoastID")
);

CREATE TABLE IF NOT EXISTS public."Order"
(
    "OrderID" integer,
    "OrderQTY" integer,
    "OrderDate" timestamp with time zone,
    "OrderShipDate" timestamp with time zone,
    "SupplierID" integer,
    PRIMARY KEY ("OrderID")
);

CREATE TABLE IF NOT EXISTS public."Varietal"
(
    "VarietalID" integer,
    "VarietalName" character varying,
    "CoffeeID" integer,
    PRIMARY KEY ("VarietalID")
);

COMMENT ON TABLE public."Varietal"
    IS 'Entity to Represent Varietals and join onto Coffee entity, as a single coffee entity may contain multiple different varietals from a single lot';

CREATE TABLE IF NOT EXISTS public."Roaster"
(
    "RoasterID" integer,
    "RoasterMake" character varying,
    "RoasterModel" character varying,
    "RoasterType" character varying,
    "RoasterCapacityGrams" integer,
    "RoasterHeating" character varying,
    "RoasterDrumType" character varying,
    PRIMARY KEY ("RoasterID")
);

CREATE TABLE IF NOT EXISTS public."Operator"
(
    "OperatorID" integer,
    "OperatorName" character varying,
    PRIMARY KEY ("OperatorID")
);

CREATE TABLE IF NOT EXISTS public."Cupping"
(
    "CuppingSessionID" integer,
    "CuppingSessionDate" timestamp with time zone,
    "CuppingRoastLevel" character varying,
    "CuppingAromaScore" real,
    "CuppingFlavorScore" real,
    "CuppingAftertasteScore" real,
    "CuppingAcidityScore" real,
    "CuppingAcidityIntensity" real,
    "CuppingBodyScore" real,
    "CuppingBodyLevel" real,
    "CuppingUniformityScore" integer,
    "CuppingCleanScore" integer,
    "CuppingSweetnessScore" integer,
    "CuppingOverall" real,
    "CuppingNotes" text,
    "RoastID" integer,
    "OperatorID" integer,
    "CuppingCoffeeWeight_g" real,
    "CuppingWaterWeight_g" real,
    "ScaleID" integer,
    "CuppingWaterTemp_F" real,
    PRIMARY KEY ("CuppingSessionID")
);

CREATE TABLE IF NOT EXISTS public."Brew"
(
    "BrewID" integer,
    "BrewDate" timestamp with time zone,
    "BrewDoseWeight" real,
    "BrewFinalWeight" real,
    "BrewTime" time without time zone,
    "BrewLog" json,
    "RoastID" integer,
    "OperatorID" integer,
    "BrewerID" integer,
    "GrinderID" integer,
    "ScaleID" integer,
    "BrewWaterTemp_F" real,
    PRIMARY KEY ("BrewID")
);

CREATE TABLE IF NOT EXISTS public."Brewer"
(
    "BrewerID" integer,
    "BrewerType" character varying,
    "BrewerMake" character varying,
    "BrewerModel" character varying,
    PRIMARY KEY ("BrewerID")
);

CREATE TABLE IF NOT EXISTS public."Grinder"
(
    "GrinderID" integer,
    "GrinderMake" character varying,
    "GrinderModel" character varying,
    "GrinderType" character varying,
    "BurrID" integer,
    PRIMARY KEY ("GrinderID")
);

CREATE TABLE IF NOT EXISTS public."Burr"
(
    "BurrID" integer,
    "BurrSize_mm" real,
    "BurrMaterial" character varying,
    "BurrMake" character varying,
    "BurrModel" character varying,
    PRIMARY KEY ("BurrID")
);

CREATE TABLE IF NOT EXISTS public."Refractometer"
(
    "RefractometerID" integer,
    "RefractometerMake" character varying,
    "RefractometerModel" character varying,
    "RefractometerRange" real,
    "RefractometerPrecision" real,
    "RefractometerResolution" real,
    "RefractometerName" character varying,
    PRIMARY KEY ("RefractometerID")
);

CREATE TABLE IF NOT EXISTS public."Refraction"
(
    "RefractionID" integer,
    "RefractionTDS" real,
    "RefractometerID" integer,
    "SampleID" integer,
    PRIMARY KEY ("RefractionID")
);

CREATE TABLE IF NOT EXISTS public."Scale"
(
    "ScaleID" integer,
    "ScaleMake" character varying,
    "ScaleModel" character varying,
    "ScaleMaxCapacity_g" real,
    "ScaleMinCapacity_g" real,
    "ScaleReadability_g" real,
    "ScaleRepeatability" real,
    "ScaleName" character varying,
    PRIMARY KEY ("ScaleID")
);

ALTER TABLE IF EXISTS public."Coffee"
    ADD FOREIGN KEY ("FarmID")
    REFERENCES public."Farm" ("FarmID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Coffee"
    ADD FOREIGN KEY ("OrderID")
    REFERENCES public."Order" ("OrderID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Coffee"
    ADD FOREIGN KEY ("OrderID")
    REFERENCES public."Order" ("OrderID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Roast"
    ADD FOREIGN KEY ("CoffeeID")
    REFERENCES public."Coffee" ("CoffeeID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Roast"
    ADD FOREIGN KEY ("RoasterID")
    REFERENCES public."Roaster" ("RoasterID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Roast"
    ADD FOREIGN KEY ("OperatorID")
    REFERENCES public."Operator" ("OperatorID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Order"
    ADD FOREIGN KEY ("SupplierID")
    REFERENCES public."Supplier" ("SupplierID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Varietal"
    ADD FOREIGN KEY ("CoffeeID")
    REFERENCES public."Coffee" ("CoffeeID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Cupping"
    ADD FOREIGN KEY ("RoastID")
    REFERENCES public."Roast" ("RoastID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Cupping"
    ADD FOREIGN KEY ("OperatorID")
    REFERENCES public."Operator" ("OperatorID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Cupping"
    ADD FOREIGN KEY ("ScaleID")
    REFERENCES public."Scale" ("ScaleID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Brew"
    ADD FOREIGN KEY ("RoastID")
    REFERENCES public."Roast" ("RoastID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Brew"
    ADD FOREIGN KEY ("OperatorID")
    REFERENCES public."Operator" ("OperatorID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Brew"
    ADD FOREIGN KEY ("BrewerID")
    REFERENCES public."Brewer" ("BrewerID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Brew"
    ADD FOREIGN KEY ("GrinderID")
    REFERENCES public."Grinder" ("GrinderID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Brew"
    ADD FOREIGN KEY ("ScaleID")
    REFERENCES public."Scale" ("ScaleID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Grinder"
    ADD FOREIGN KEY ("BurrID")
    REFERENCES public."Burr" ("BurrID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Refraction"
    ADD FOREIGN KEY ("SampleID")
    REFERENCES public."Brew" ("BrewID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Refraction"
    ADD FOREIGN KEY ("SampleID")
    REFERENCES public."Cupping" ("CuppingSessionID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Refraction"
    ADD FOREIGN KEY ("RefractometerID")
    REFERENCES public."Refractometer" ("RefractometerID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;